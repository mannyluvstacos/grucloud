(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{165:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return u}));var a=t(3),r=t(8),i=(t(0),t(243)),o={id:"Certificate",title:"Certificate"},c={unversionedId:"aws/resources/ACM/Certificate",id:"aws/resources/ACM/Certificate",isDocsHomePage:!1,title:"Certificate",description:"Provides an SSL certificate.",source:"@site/docs/aws/resources/ACM/Certificate.md",sourceDirName:"aws/resources/ACM",slug:"/aws/resources/ACM/Certificate",permalink:"/docs/aws/resources/ACM/Certificate",version:"current",frontMatter:{id:"Certificate",title:"Certificate"},sidebar:"docs",previous:{title:"Resources List",permalink:"/docs/aws/ResourcesList"},next:{title:"Account",permalink:"/docs/aws/resources/APIGateway/Account"}},s=[{value:"Examples",id:"examples",children:[{value:"Create a certificate with DNS validation",id:"create-a-certificate-with-dns-validation",children:[]}]},{value:"Source Code Examples",id:"source-code-examples",children:[]},{value:"Properties",id:"properties",children:[]},{value:"UsedBy",id:"usedby",children:[]},{value:"List",id:"list",children:[]}],l={toc:s};function u(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Provides an SSL certificate."),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Certificates for CloudFront must be created in the us-east-1 region only.")),Object(i.b)("h2",{id:"examples"},"Examples"),Object(i.b)("h3",{id:"create-a-certificate-with-dns-validation"},"Create a certificate with DNS validation"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'const domainName = "your.domain.name.com";\n\nconst certificate = provider.ACM.makeCertificate({\n  name: domainName,\n  properties: () => ({}),\n});\n\nconst domain = provider.Route53Domain.useDomain({\n  name: domainName,\n});\nconst hostedZone = provider.Route53.makeHostedZone({\n  name: `${domainName}.`,\n  dependencies: { domain },\n});\n\nconst recordValidation = provider.Route53.makeRecord({\n  name: `certificate-validation-${domainName}.`,\n  dependencies: { hostedZone, certificate },\n  properties: ({ dependencies: { certificate } }) => {\n    const domainValidationOption =\n      certificate?.live?.DomainValidationOptions[0];\n    const record = domainValidationOption?.ResourceRecord;\n    if (domainValidationOption) {\n      assert(\n        record,\n        `missing record in DomainValidationOptions, certificate ${JSON.stringify(\n          certificate.live\n        )}`\n      );\n    }\n    return {\n      Name: record?.Name,\n      ResourceRecords: [\n        {\n          Value: record?.Value,\n        },\n      ],\n      TTL: 300,\n      Type: "CNAME",\n    };\n  },\n});\n')),Object(i.b)("h2",{id:"source-code-examples"},"Source Code Examples"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/website-https/iac.js"},"https static website"))),Object(i.b)("h2",{id:"properties"},"Properties"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ACM.html#requestCertificate-property"},"properties list"))),Object(i.b)("h2",{id:"usedby"},"UsedBy"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/aws/resources/Route53/HostedZone"},"Route53 Hosted Zone")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/aws/resources/CloudFront/Distribution"},"CloudFront Distribution")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/aws/resources/APIGateway/DomainName"},"APIGateway Domain Name")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"/docs/aws/resources/ApiGatewayV2/DomainName"},"ApiGatewayV2 Domain Name"))),Object(i.b)("h2",{id:"list"},"List"),Object(i.b)("p",null,"The list of certificates can be displayed and filtered with the type ",Object(i.b)("strong",{parentName:"p"},"Certificate"),":"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"gc list -t Certificate\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-txt"},'Listing resources on 1 provider: aws\n\u2713 aws\n  \u2713 Initialising\n  \u2713 Listing 1/1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2 ACM::Certificate from aws                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: dev.cloudfront.aws.test.grucloud.org                       \u2502\n\u2502 managedByUs: NO                                                  \u2502\n\u2502 live:                                                            \u2502\n\u2502   CertificateArn: arn:aws:acm:us-east-1:840541460064:certificat\u2026 \u2502\n\u2502   DomainName: dev.cloudfront.aws.test.grucloud.org               \u2502\n\u2502   SubjectAlternativeNames:                                       \u2502\n\u2502     - "dev.cloudfront.aws.test.grucloud.org"                     \u2502\n\u2502   DomainValidationOptions:                                       \u2502\n\u2502     - DomainName: dev.cloudfront.aws.test.grucloud.org           \u2502\n\u2502       ValidationDomain: dev.cloudfront.aws.test.grucloud.org     \u2502\n\u2502       ValidationStatus: SUCCESS                                  \u2502\n\u2502       ResourceRecord:                                            \u2502\n\u2502         Name: _1c003a592ed0c0c949c1031f5deaef5e.dev.cloudfront.\u2026 \u2502\n\u2502         Type: CNAME                                              \u2502\n\u2502         Value: _20c68e8d64be718e90d61c5bbb573b2b.bbfvkzsszw.acm\u2026 \u2502\n\u2502       ValidationMethod: DNS                                      \u2502\n\u2502   Serial: 08:be:e5:a5:32:6e:83:1f:04:62:74:ad:35:40:35:59        \u2502\n\u2502   Subject: CN=dev.cloudfront.aws.test.grucloud.org               \u2502\n\u2502   Issuer: Amazon                                                 \u2502\n\u2502   CreatedAt: 2021-09-21T18:09:06.000Z                            \u2502\n\u2502   IssuedAt: 2021-09-21T18:10:02.000Z                             \u2502\n\u2502   Status: ISSUED                                                 \u2502\n\u2502   NotBefore: 2021-09-21T00:00:00.000Z                            \u2502\n\u2502   NotAfter: 2022-10-20T23:59:59.000Z                             \u2502\n\u2502   KeyAlgorithm: RSA-2048                                         \u2502\n\u2502   SignatureAlgorithm: SHA256WITHRSA                              \u2502\n\u2502   InUseBy: []                                                    \u2502\n\u2502   Type: AMAZON_ISSUED                                            \u2502\n\u2502   KeyUsages:                                                     \u2502\n\u2502     - Name: DIGITAL_SIGNATURE                                    \u2502\n\u2502     - Name: KEY_ENCIPHERMENT                                     \u2502\n\u2502   ExtendedKeyUsages:                                             \u2502\n\u2502     - Name: TLS_WEB_SERVER_AUTHENTICATION                        \u2502\n\u2502       OID: 1.3.6.1.5.5.7.3.1                                     \u2502\n\u2502     - Name: TLS_WEB_CLIENT_AUTHENTICATION                        \u2502\n\u2502       OID: 1.3.6.1.5.5.7.3.2                                     \u2502\n\u2502   RenewalEligibility: INELIGIBLE                                 \u2502\n\u2502   Options:                                                       \u2502\n\u2502     CertificateTransparencyLoggingPreference: ENABLED            \u2502\n\u2502   Tags:                                                          \u2502\n\u2502     - Key: gc-created-by-provider                                \u2502\n\u2502       Value: aws                                                 \u2502\n\u2502     - Key: gc-managed-by                                         \u2502\n\u2502       Value: grucloud                                            \u2502\n\u2502     - Key: gc-project-name                                       \u2502\n\u2502       Value: @grucloud/example-aws-website-https                 \u2502\n\u2502     - Key: gc-stage                                              \u2502\n\u2502       Value: dev                                                 \u2502\n\u2502     - Key: Name                                                  \u2502\n\u2502       Value: dev.cloudfront.aws.test.grucloud.org                \u2502\n\u2502                                                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: grucloud.org                                               \u2502\n\u2502 managedByUs: NO                                                  \u2502\n\u2502 live:                                                            \u2502\n\u2502   CertificateArn: arn:aws:acm:us-east-1:840541460064:certificat\u2026 \u2502\n\u2502   DomainName: grucloud.org                                       \u2502\n\u2502   SubjectAlternativeNames:                                       \u2502\n\u2502     - "grucloud.org"                                             \u2502\n\u2502   DomainValidationOptions:                                       \u2502\n\u2502     - DomainName: grucloud.org                                   \u2502\n\u2502       ValidationDomain: grucloud.org                             \u2502\n\u2502       ValidationStatus: SUCCESS                                  \u2502\n\u2502       ResourceRecord:                                            \u2502\n\u2502         Name: _691e4a68814938b97e40e8e955bf1a30.grucloud.org.    \u2502\n\u2502         Type: CNAME                                              \u2502\n\u2502         Value: _19aece4a9123a510cd3c628c73fa754b.wggjkglgrm.acm\u2026 \u2502\n\u2502       ValidationMethod: DNS                                      \u2502\n\u2502   Serial: 04:66:5e:8d:c5:53:94:cc:cd:f7:33:70:73:a4:33:05        \u2502\n\u2502   Subject: CN=grucloud.org                                       \u2502\n\u2502   Issuer: Amazon                                                 \u2502\n\u2502   CreatedAt: 2021-10-27T17:31:03.044Z                            \u2502\n\u2502   IssuedAt: 2021-10-27T17:41:51.537Z                             \u2502\n\u2502   Status: ISSUED                                                 \u2502\n\u2502   NotBefore: 2021-10-27T00:00:00.000Z                            \u2502\n\u2502   NotAfter: 2022-11-25T23:59:59.000Z                             \u2502\n\u2502   KeyAlgorithm: RSA-2048                                         \u2502\n\u2502   SignatureAlgorithm: SHA256WITHRSA                              \u2502\n\u2502   InUseBy: []                                                    \u2502\n\u2502   Type: AMAZON_ISSUED                                            \u2502\n\u2502   KeyUsages:                                                     \u2502\n\u2502     - Name: DIGITAL_SIGNATURE                                    \u2502\n\u2502     - Name: KEY_ENCIPHERMENT                                     \u2502\n\u2502   ExtendedKeyUsages:                                             \u2502\n\u2502     - Name: TLS_WEB_SERVER_AUTHENTICATION                        \u2502\n\u2502       OID: 1.3.6.1.5.5.7.3.1                                     \u2502\n\u2502     - Name: TLS_WEB_CLIENT_AUTHENTICATION                        \u2502\n\u2502       OID: 1.3.6.1.5.5.7.3.2                                     \u2502\n\u2502   RenewalEligibility: INELIGIBLE                                 \u2502\n\u2502   Options:                                                       \u2502\n\u2502     CertificateTransparencyLoggingPreference: ENABLED            \u2502\n\u2502   Tags: []                                                       \u2502\n\u2502                                                                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n')))}u.isMDXComponent=!0},243:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return b}));var a=t(0),r=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),u=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=u(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(t),p=a,b=d["".concat(o,".").concat(p)]||d[p]||m[p]||i;return t?r.a.createElement(b,c(c({ref:n},l),{},{components:t})):r.a.createElement(b,c({ref:n},l))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);