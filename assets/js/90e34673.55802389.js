"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2495],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return m}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=s(r),m=o,d=f["".concat(c,".").concat(m)]||f[m]||l[m]||i;return r?t.createElement(d,u(u({ref:n},p),{},{components:r})):t.createElement(d,u({ref:n},p))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,u=new Array(i);u[0]=f;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,u[1]=a;for(var s=2;s<i;s++)u[s]=r[s];return t.createElement.apply(null,u)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},39358:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return f}});var t=r(87462),o=r(63366),i=(r(67294),r(3905)),u=["components"],a={id:"ConnectivityConfiguration",title:"ConnectivityConfiguration"},c=void 0,s={unversionedId:"azure/resources/Network/ConnectivityConfiguration",id:"azure/resources/Network/ConnectivityConfiguration",isDocsHomePage:!1,title:"ConnectivityConfiguration",description:"Provides a ConnectivityConfiguration from the Network group",source:"@site/docs/azure/resources/Network/ConnectivityConfiguration.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ConnectivityConfiguration",permalink:"/docs/azure/resources/Network/ConnectivityConfiguration",tags:[],version:"current",frontMatter:{id:"ConnectivityConfiguration",title:"ConnectivityConfiguration"},sidebar:"docs",previous:{title:"ConnectionMonitor",permalink:"/docs/azure/resources/Network/ConnectionMonitor"},next:{title:"CustomIPPrefix",permalink:"/docs/azure/resources/Network/CustomIPPrefix"}},p=[{value:"Examples",id:"examples",children:[{value:"ConnectivityConfigurationsPut",id:"connectivityconfigurationsput",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],l={toc:p};function f(e){var n=e.components,r=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Provides a ",(0,i.kt)("strong",{parentName:"p"},"ConnectivityConfiguration")," from the ",(0,i.kt)("strong",{parentName:"p"},"Network")," group"),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"connectivityconfigurationsput"},"ConnectivityConfigurationsPut"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeConnectivityConfiguration({\n  name: "myConnectivityConfiguration",\n  properties: () => ({\n    properties: {\n      displayName: "myTestConnectivityConfig",\n      description: "Sample Configuration",\n      connectivityTopology: "HubAndSpoke",\n      hubs: [\n        {\n          resourceId:\n            "subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myTestConnectivityConfig",\n          resourceType: "Microsoft.Network/virtualNetworks",\n        },\n      ],\n      deleteExistingPeering: "True",\n      isGlobal: "True",\n      appliesToGroups: [\n        {\n          networkGroupId:\n            "subscriptions/subscriptionA/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkManagers/testNetworkManager/networkGroups/group1",\n          useHubGateway: "True",\n          groupConnectivity: "None",\n          isGlobal: "False",\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    adminRule: resources.Network.AdminRule["myAdminRule"],\n    networkGroup: resources.Network.NetworkGroup["myNetworkGroup"],\n  }),\n});\n\n')),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../Network/AdminRule.md"},"AdminRule")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../Network/NetworkGroup.md"},"NetworkGroup"))),(0,i.kt)("h2",{id:"misc"},"Misc"),(0,i.kt)("p",null,"The resource version is ",(0,i.kt)("inlineCode",{parentName:"p"},"2021-02-01-preview"),"."),(0,i.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/preview/2021-02-01-preview/networkManagerConnectivityConfiguration.json"},"here"),"."))}f.isMDXComponent=!0}}]);