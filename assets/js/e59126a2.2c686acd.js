"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[967],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return y}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},l=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=p(t),y=i,g=l["".concat(c,".").concat(y)]||l[y]||d[y]||o;return t?r.createElement(g,s(s({ref:n},u),{},{components:t})):r.createElement(g,s({ref:n},u))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,s=new Array(o);s[0]=l;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}l.displayName="MDXCreateElement"},30459:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return l}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),s=["components"],a={id:"VirtualNetworkGatewayConnection",title:"VirtualNetworkGatewayConnection"},c=void 0,p={unversionedId:"azure/resources/Network/VirtualNetworkGatewayConnection",id:"azure/resources/Network/VirtualNetworkGatewayConnection",isDocsHomePage:!1,title:"VirtualNetworkGatewayConnection",description:"Provides a VirtualNetworkGatewayConnection from the Network group",source:"@site/docs/azure/resources/Network/VirtualNetworkGatewayConnection.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/VirtualNetworkGatewayConnection",permalink:"/docs/azure/resources/Network/VirtualNetworkGatewayConnection",tags:[],version:"current",frontMatter:{id:"VirtualNetworkGatewayConnection",title:"VirtualNetworkGatewayConnection"},sidebar:"docs",previous:{title:"VirtualNetworkGateway",permalink:"/docs/azure/resources/Network/VirtualNetworkGateway"},next:{title:"VirtualNetworkGatewayConnectionSharedKey",permalink:"/docs/azure/resources/Network/VirtualNetworkGatewayConnectionSharedKey"}},u=[{value:"Examples",id:"examples",children:[{value:"CreateVirtualNetworkGatewayConnection_S2S",id:"createvirtualnetworkgatewayconnection_s2s",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:u};function l(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"VirtualNetworkGatewayConnection")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"createvirtualnetworkgatewayconnection_s2s"},"CreateVirtualNetworkGatewayConnection_S2S"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeVirtualNetworkGatewayConnection({\n  name: "myVirtualNetworkGatewayConnection",\n  properties: () => ({\n    properties: {\n      virtualNetworkGateway1: {\n        properties: {\n          ipConfigurations: [\n            {\n              properties: {\n                privateIPAllocationMethod: "Dynamic",\n                subnet: {\n                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vnet1/subnets/GatewaySubnet",\n                },\n                publicIPAddress: {\n                  id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/gwpip",\n                },\n              },\n              name: "gwipconfig1",\n              id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/ipConfigurations/gwipconfig1",\n            },\n          ],\n          gatewayType: "Vpn",\n          vpnType: "RouteBased",\n          enableBgp: false,\n          activeActive: false,\n          sku: { name: "VpnGw1", tier: "VpnGw1" },\n          bgpSettings: {\n            asn: 65514,\n            bgpPeeringAddress: "10.0.1.30",\n            peerWeight: 0,\n          },\n        },\n        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw",\n        location: "centralus",\n        tags: {},\n      },\n      localNetworkGateway2: {\n        properties: {\n          localNetworkAddressSpace: { addressPrefixes: ["10.1.0.0/16"] },\n          gatewayIpAddress: "x.x.x.x",\n        },\n        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/localNetworkGateways/localgw",\n        location: "centralus",\n        tags: {},\n      },\n      ingressNatRules: [\n        {\n          id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule1",\n        },\n      ],\n      egressNatRules: [\n        {\n          id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworkGateways/vpngw/natRules/natRule2",\n        },\n      ],\n      connectionType: "IPsec",\n      connectionProtocol: "IKEv2",\n      routingWeight: 0,\n      dpdTimeoutSeconds: 30,\n      sharedKey: "Abc123",\n      enableBgp: false,\n      usePolicyBasedTrafficSelectors: false,\n      ipsecPolicies: [],\n      trafficSelectorPolicies: [],\n      connectionMode: "Default",\n    },\n    location: "centralus",\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    subnet: resources.Network.Subnet["mySubnet"],\n    publicIpAddress: resources.Network.PublicIPAddress["myPublicIPAddress"],\n    virtualHubIpConfiguration:\n      resources.Network.VirtualHubIpConfiguration[\n        "myVirtualHubIpConfiguration"\n      ],\n  }),\n});\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Subnet"},"Subnet")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../Network/PublicIPAddress.md"},"PublicIPAddress")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/VirtualHubIpConfiguration"},"VirtualHubIpConfiguration"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the virtual network gateway connection.',\n      properties: {\n        authorizationKey: { type: 'string', description: 'The authorizationKey.' },\n        virtualNetworkGateway1: {\n          properties: {\n            properties: {\n              'x-ms-client-flatten': true,\n              description: 'Properties of the virtual network gateway.',\n              properties: {\n                ipConfigurations: {\n                  type: 'array',\n                  items: {\n                    properties: {\n                      properties: [Object],\n                      name: [Object],\n                      etag: [Object]\n                    },\n                    allOf: [ [Object] ],\n                    description: 'IP configuration for virtual network gateway.'\n                  },\n                  description: 'IP configurations for virtual network gateway.'\n                },\n                gatewayType: {\n                  type: 'string',\n                  description: 'The type of this virtual network gateway.',\n                  enum: [ 'Vpn', 'ExpressRoute', 'LocalGateway' ],\n                  'x-ms-enum': {\n                    name: 'VirtualNetworkGatewayType',\n                    modelAsString: true\n                  }\n                },\n                vpnType: {\n                  type: 'string',\n                  description: 'The type of this virtual network gateway.',\n                  enum: [ 'PolicyBased', 'RouteBased' ],\n                  'x-ms-enum': { name: 'VpnType', modelAsString: true }\n                },\n                vpnGatewayGeneration: {\n                  type: 'string',\n                  description: 'The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.',\n                  enum: [ 'None', 'Generation1', 'Generation2' ],\n                  'x-ms-enum': { name: 'VpnGatewayGeneration', modelAsString: true }\n                },\n                enableBgp: {\n                  type: 'boolean',\n                  description: 'Whether BGP is enabled for this virtual network gateway or not.'\n                },\n                enablePrivateIpAddress: {\n                  type: 'boolean',\n                  description: 'Whether private IP needs to be enabled on this gateway for connections or not.'\n                },\n                activeActive: { type: 'boolean', description: 'ActiveActive flag.' },\n                disableIPSecReplayProtection: {\n                  type: 'boolean',\n                  description: 'disableIPSecReplayProtection flag.'\n                },\n                gatewayDefaultSite: {\n                  properties: {\n                    id: { type: 'string', description: 'Resource ID.' }\n                  },\n                  description: 'Reference to another subresource.',\n                  'x-ms-azure-resource': true\n                },\n                sku: {\n                  description: 'The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.',\n                  properties: {\n                    name: {\n                      type: 'string',\n                      description: 'Gateway SKU name.',\n                      enum: [Array],\n                      'x-ms-enum': [Object]\n                    },\n                    tier: {\n                      type: 'string',\n                      description: 'Gateway SKU tier.',\n                      enum: [Array],\n                      'x-ms-enum': [Object]\n                    },\n                    capacity: {\n                      readOnly: true,\n                      type: 'integer',\n                      format: 'int32',\n                      description: 'The capacity.'\n                    }\n                  }\n                },\n                vpnClientConfiguration: {\n                  description: 'The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.',\n                  properties: {\n                    vpnClientAddressPool: {\n                      description: 'The reference to the address space resource which represents Address space for P2S VpnClient.',\n                      properties: [Object]\n                    },\n                    vpnClientRootCertificates: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientRootCertificate for virtual network gateway.'\n                    },\n                    vpnClientRevokedCertificates: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientRevokedCertificate for Virtual network gateway.'\n                    },\n                    vpnClientProtocols: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientProtocols for Virtual network gateway.'\n                    },\n                    vpnAuthenticationTypes: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VPN authentication types for the virtual network gateway..'\n                    },\n                    vpnClientIpsecPolicies: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientIpsecPolicies for virtual network gateway P2S client.'\n                    },\n                    radiusServerAddress: {\n                      type: 'string',\n                      description: 'The radius server address property of the VirtualNetworkGateway resource for vpn client connection.'\n                    },\n                    radiusServerSecret: {\n                      type: 'string',\n                      description: 'The radius secret property of the VirtualNetworkGateway resource for vpn client connection.'\n                    },\n                    radiusServers: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'The radiusServers property for multiple radius server configuration.'\n                    },\n                    aadTenant: {\n                      type: 'string',\n                      description: 'The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    },\n                    aadAudience: {\n                      type: 'string',\n                      description: 'The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    },\n                    aadIssuer: {\n                      type: 'string',\n                      description: 'The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    }\n                  }\n                },\n                bgpSettings: {\n                  description: \"Virtual network gateway's BGP speaker settings.\",\n                  properties: {\n                    asn: {\n                      type: 'integer',\n                      format: 'int64',\n                      minimum: 0,\n                      maximum: 4294967295,\n                      description: \"The BGP speaker's ASN.\"\n                    },\n                    bgpPeeringAddress: {\n                      type: 'string',\n                      description: 'The BGP peering address and BGP identifier of this BGP speaker.'\n                    },\n                    peerWeight: {\n                      type: 'integer',\n                      format: 'int32',\n                      description: 'The weight added to routes learned from this BGP speaker.'\n                    },\n                    bgpPeeringAddresses: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'BGP peering address with IP configuration ID for virtual network gateway.'\n                    }\n                  }\n                },\n                customRoutes: {\n                  description: 'The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.',\n                  properties: {\n                    addressPrefixes: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'A list of address blocks reserved for this virtual network in CIDR notation.'\n                    }\n                  }\n                },\n                resourceGuid: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'The resource GUID property of the virtual network gateway resource.'\n                },\n                provisioningState: {\n                  readOnly: true,\n                  description: 'The provisioning state of the virtual network gateway resource.',\n                  type: 'string',\n                  enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                  'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                },\n                enableDnsForwarding: {\n                  type: 'boolean',\n                  description: 'Whether dns forwarding is enabled or not.'\n                },\n                inboundDnsForwardingEndpoint: {\n                  type: 'string',\n                  readOnly: true,\n                  description: 'The IP address allocated by the gateway to which dns requests can be sent.'\n                },\n                vNetExtendedLocationResourceId: {\n                  type: 'string',\n                  description: 'Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.'\n                },\n                natRules: {\n                  type: 'array',\n                  items: {\n                    properties: {\n                      properties: [Object],\n                      name: [Object],\n                      etag: [Object],\n                      type: [Object]\n                    },\n                    allOf: [ [Object] ],\n                    description: 'VirtualNetworkGatewayNatRule Resource.'\n                  },\n                  description: 'NatRules for virtual network gateway.'\n                },\n                enableBgpRouteTranslationForNat: {\n                  type: 'boolean',\n                  description: 'EnableBgpRouteTranslationForNat flag.'\n                }\n              }\n            },\n            extendedLocation: {\n              description: 'The extended location of type local virtual network gateway.',\n              properties: {\n                name: {\n                  type: 'string',\n                  description: 'The name of the extended location.'\n                },\n                type: {\n                  description: 'The type of the extended location.',\n                  type: 'string',\n                  enum: [ 'EdgeZone' ],\n                  'x-ms-enum': {\n                    name: 'ExtendedLocationTypes',\n                    modelAsString: true\n                  }\n                }\n              }\n            },\n            etag: {\n              readOnly: true,\n              type: 'string',\n              description: 'A unique read-only string that changes whenever the resource is updated.'\n            }\n          },\n          allOf: [\n            {\n              properties: {\n                id: { type: 'string', description: 'Resource ID.' },\n                name: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource name.'\n                },\n                type: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource type.'\n                },\n                location: { type: 'string', description: 'Resource location.' },\n                tags: {\n                  type: 'object',\n                  additionalProperties: { type: 'string' },\n                  description: 'Resource tags.'\n                }\n              },\n              description: 'Common resource representation.',\n              'x-ms-azure-resource': true\n            }\n          ],\n          required: [ 'properties' ],\n          description: 'A common class for general resource information.'\n        },\n        virtualNetworkGateway2: {\n          properties: {\n            properties: {\n              'x-ms-client-flatten': true,\n              description: 'Properties of the virtual network gateway.',\n              properties: {\n                ipConfigurations: {\n                  type: 'array',\n                  items: {\n                    properties: {\n                      properties: [Object],\n                      name: [Object],\n                      etag: [Object]\n                    },\n                    allOf: [ [Object] ],\n                    description: 'IP configuration for virtual network gateway.'\n                  },\n                  description: 'IP configurations for virtual network gateway.'\n                },\n                gatewayType: {\n                  type: 'string',\n                  description: 'The type of this virtual network gateway.',\n                  enum: [ 'Vpn', 'ExpressRoute', 'LocalGateway' ],\n                  'x-ms-enum': {\n                    name: 'VirtualNetworkGatewayType',\n                    modelAsString: true\n                  }\n                },\n                vpnType: {\n                  type: 'string',\n                  description: 'The type of this virtual network gateway.',\n                  enum: [ 'PolicyBased', 'RouteBased' ],\n                  'x-ms-enum': { name: 'VpnType', modelAsString: true }\n                },\n                vpnGatewayGeneration: {\n                  type: 'string',\n                  description: 'The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.',\n                  enum: [ 'None', 'Generation1', 'Generation2' ],\n                  'x-ms-enum': { name: 'VpnGatewayGeneration', modelAsString: true }\n                },\n                enableBgp: {\n                  type: 'boolean',\n                  description: 'Whether BGP is enabled for this virtual network gateway or not.'\n                },\n                enablePrivateIpAddress: {\n                  type: 'boolean',\n                  description: 'Whether private IP needs to be enabled on this gateway for connections or not.'\n                },\n                activeActive: { type: 'boolean', description: 'ActiveActive flag.' },\n                disableIPSecReplayProtection: {\n                  type: 'boolean',\n                  description: 'disableIPSecReplayProtection flag.'\n                },\n                gatewayDefaultSite: {\n                  properties: {\n                    id: { type: 'string', description: 'Resource ID.' }\n                  },\n                  description: 'Reference to another subresource.',\n                  'x-ms-azure-resource': true\n                },\n                sku: {\n                  description: 'The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.',\n                  properties: {\n                    name: {\n                      type: 'string',\n                      description: 'Gateway SKU name.',\n                      enum: [Array],\n                      'x-ms-enum': [Object]\n                    },\n                    tier: {\n                      type: 'string',\n                      description: 'Gateway SKU tier.',\n                      enum: [Array],\n                      'x-ms-enum': [Object]\n                    },\n                    capacity: {\n                      readOnly: true,\n                      type: 'integer',\n                      format: 'int32',\n                      description: 'The capacity.'\n                    }\n                  }\n                },\n                vpnClientConfiguration: {\n                  description: 'The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.',\n                  properties: {\n                    vpnClientAddressPool: {\n                      description: 'The reference to the address space resource which represents Address space for P2S VpnClient.',\n                      properties: [Object]\n                    },\n                    vpnClientRootCertificates: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientRootCertificate for virtual network gateway.'\n                    },\n                    vpnClientRevokedCertificates: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientRevokedCertificate for Virtual network gateway.'\n                    },\n                    vpnClientProtocols: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientProtocols for Virtual network gateway.'\n                    },\n                    vpnAuthenticationTypes: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VPN authentication types for the virtual network gateway..'\n                    },\n                    vpnClientIpsecPolicies: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'VpnClientIpsecPolicies for virtual network gateway P2S client.'\n                    },\n                    radiusServerAddress: {\n                      type: 'string',\n                      description: 'The radius server address property of the VirtualNetworkGateway resource for vpn client connection.'\n                    },\n                    radiusServerSecret: {\n                      type: 'string',\n                      description: 'The radius secret property of the VirtualNetworkGateway resource for vpn client connection.'\n                    },\n                    radiusServers: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'The radiusServers property for multiple radius server configuration.'\n                    },\n                    aadTenant: {\n                      type: 'string',\n                      description: 'The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    },\n                    aadAudience: {\n                      type: 'string',\n                      description: 'The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    },\n                    aadIssuer: {\n                      type: 'string',\n                      description: 'The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.'\n                    }\n                  }\n                },\n                bgpSettings: {\n                  description: \"Virtual network gateway's BGP speaker settings.\",\n                  properties: {\n                    asn: {\n                      type: 'integer',\n                      format: 'int64',\n                      minimum: 0,\n                      maximum: 4294967295,\n                      description: \"The BGP speaker's ASN.\"\n                    },\n                    bgpPeeringAddress: {\n                      type: 'string',\n                      description: 'The BGP peering address and BGP identifier of this BGP speaker.'\n                    },\n                    peerWeight: {\n                      type: 'integer',\n                      format: 'int32',\n                      description: 'The weight added to routes learned from this BGP speaker.'\n                    },\n                    bgpPeeringAddresses: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'BGP peering address with IP configuration ID for virtual network gateway.'\n                    }\n                  }\n                },\n                customRoutes: {\n                  description: 'The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.',\n                  properties: {\n                    addressPrefixes: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'A list of address blocks reserved for this virtual network in CIDR notation.'\n                    }\n                  }\n                },\n                resourceGuid: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'The resource GUID property of the virtual network gateway resource.'\n                },\n                provisioningState: {\n                  readOnly: true,\n                  description: 'The provisioning state of the virtual network gateway resource.',\n                  type: 'string',\n                  enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                  'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                },\n                enableDnsForwarding: {\n                  type: 'boolean',\n                  description: 'Whether dns forwarding is enabled or not.'\n                },\n                inboundDnsForwardingEndpoint: {\n                  type: 'string',\n                  readOnly: true,\n                  description: 'The IP address allocated by the gateway to which dns requests can be sent.'\n                },\n                vNetExtendedLocationResourceId: {\n                  type: 'string',\n                  description: 'Customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.'\n                },\n                natRules: {\n                  type: 'array',\n                  items: {\n                    properties: {\n                      properties: [Object],\n                      name: [Object],\n                      etag: [Object],\n                      type: [Object]\n                    },\n                    allOf: [ [Object] ],\n                    description: 'VirtualNetworkGatewayNatRule Resource.'\n                  },\n                  description: 'NatRules for virtual network gateway.'\n                },\n                enableBgpRouteTranslationForNat: {\n                  type: 'boolean',\n                  description: 'EnableBgpRouteTranslationForNat flag.'\n                }\n              }\n            },\n            extendedLocation: {\n              description: 'The extended location of type local virtual network gateway.',\n              properties: {\n                name: {\n                  type: 'string',\n                  description: 'The name of the extended location.'\n                },\n                type: {\n                  description: 'The type of the extended location.',\n                  type: 'string',\n                  enum: [ 'EdgeZone' ],\n                  'x-ms-enum': {\n                    name: 'ExtendedLocationTypes',\n                    modelAsString: true\n                  }\n                }\n              }\n            },\n            etag: {\n              readOnly: true,\n              type: 'string',\n              description: 'A unique read-only string that changes whenever the resource is updated.'\n            }\n          },\n          allOf: [\n            {\n              properties: {\n                id: { type: 'string', description: 'Resource ID.' },\n                name: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource name.'\n                },\n                type: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource type.'\n                },\n                location: { type: 'string', description: 'Resource location.' },\n                tags: {\n                  type: 'object',\n                  additionalProperties: { type: 'string' },\n                  description: 'Resource tags.'\n                }\n              },\n              description: 'Common resource representation.',\n              'x-ms-azure-resource': true\n            }\n          ],\n          required: [ 'properties' ],\n          description: 'A common class for general resource information.'\n        },\n        localNetworkGateway2: {\n          description: 'The reference to local network gateway resource.',\n          properties: {\n            properties: {\n              'x-ms-client-flatten': true,\n              description: 'Properties of the local network gateway.',\n              properties: {\n                localNetworkAddressSpace: {\n                  description: 'Local network site address space.',\n                  properties: {\n                    addressPrefixes: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'A list of address blocks reserved for this virtual network in CIDR notation.'\n                    }\n                  }\n                },\n                gatewayIpAddress: {\n                  type: 'string',\n                  description: 'IP address of local network gateway.'\n                },\n                fqdn: {\n                  type: 'string',\n                  description: 'FQDN of local network gateway.'\n                },\n                bgpSettings: {\n                  description: \"Local network gateway's BGP speaker settings.\",\n                  properties: {\n                    asn: {\n                      type: 'integer',\n                      format: 'int64',\n                      minimum: 0,\n                      maximum: 4294967295,\n                      description: \"The BGP speaker's ASN.\"\n                    },\n                    bgpPeeringAddress: {\n                      type: 'string',\n                      description: 'The BGP peering address and BGP identifier of this BGP speaker.'\n                    },\n                    peerWeight: {\n                      type: 'integer',\n                      format: 'int32',\n                      description: 'The weight added to routes learned from this BGP speaker.'\n                    },\n                    bgpPeeringAddresses: {\n                      type: 'array',\n                      items: [Object],\n                      description: 'BGP peering address with IP configuration ID for virtual network gateway.'\n                    }\n                  }\n                },\n                resourceGuid: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'The resource GUID property of the local network gateway resource.'\n                },\n                provisioningState: {\n                  readOnly: true,\n                  description: 'The provisioning state of the local network gateway resource.',\n                  type: 'string',\n                  enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                  'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                }\n              }\n            },\n            etag: {\n              readOnly: true,\n              type: 'string',\n              description: 'A unique read-only string that changes whenever the resource is updated.'\n            }\n          },\n          allOf: [\n            {\n              properties: {\n                id: { type: 'string', description: 'Resource ID.' },\n                name: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource name.'\n                },\n                type: {\n                  readOnly: true,\n                  type: 'string',\n                  description: 'Resource type.'\n                },\n                location: { type: 'string', description: 'Resource location.' },\n                tags: {\n                  type: 'object',\n                  additionalProperties: { type: 'string' },\n                  description: 'Resource tags.'\n                }\n              },\n              description: 'Common resource representation.',\n              'x-ms-azure-resource': true\n            }\n          ],\n          required: [ 'properties' ]\n        },\n        ingressNatRules: {\n          type: 'array',\n          items: {\n            properties: { id: { type: 'string', description: 'Resource ID.' } },\n            description: 'Reference to another subresource.',\n            'x-ms-azure-resource': true\n          },\n          description: 'List of ingress NatRules.'\n        },\n        egressNatRules: {\n          type: 'array',\n          items: {\n            properties: { id: { type: 'string', description: 'Resource ID.' } },\n            description: 'Reference to another subresource.',\n            'x-ms-azure-resource': true\n          },\n          description: 'List of egress NatRules.'\n        },\n        connectionType: {\n          description: 'Gateway connection type.',\n          type: 'string',\n          enum: [ 'IPsec', 'Vnet2Vnet', 'ExpressRoute', 'VPNClient' ],\n          'x-ms-enum': {\n            name: 'VirtualNetworkGatewayConnectionType',\n            modelAsString: true\n          }\n        },\n        connectionProtocol: {\n          description: 'Connection protocol used for this connection.',\n          type: 'string',\n          enum: [ 'IKEv2', 'IKEv1' ],\n          'x-ms-enum': {\n            name: 'VirtualNetworkGatewayConnectionProtocol',\n            modelAsString: true\n          }\n        },\n        routingWeight: {\n          type: 'integer',\n          format: 'int32',\n          description: 'The routing weight.'\n        },\n        dpdTimeoutSeconds: {\n          type: 'integer',\n          format: 'int32',\n          description: 'The dead peer detection timeout of this connection in seconds.'\n        },\n        connectionMode: {\n          description: 'The connection mode for this connection.',\n          type: 'string',\n          enum: [ 'Default', 'ResponderOnly', 'InitiatorOnly' ],\n          'x-ms-enum': {\n            name: 'VirtualNetworkGatewayConnectionMode',\n            modelAsString: true\n          }\n        },\n        sharedKey: { type: 'string', description: 'The IPSec shared key.' },\n        connectionStatus: {\n          readOnly: true,\n          description: 'Virtual Network Gateway connection status.',\n          type: 'string',\n          enum: [ 'Unknown', 'Connecting', 'Connected', 'NotConnected' ],\n          'x-ms-enum': {\n            name: 'VirtualNetworkGatewayConnectionStatus',\n            modelAsString: true\n          }\n        },\n        tunnelConnectionStatus: {\n          readOnly: true,\n          type: 'array',\n          items: {\n            properties: {\n              tunnel: {\n                readOnly: true,\n                type: 'string',\n                description: 'Tunnel name.'\n              },\n              connectionStatus: {\n                readOnly: true,\n                description: 'Virtual Network Gateway connection status.',\n                type: 'string',\n                enum: [\n                  'Unknown',\n                  'Connecting',\n                  'Connected',\n                  'NotConnected'\n                ],\n                'x-ms-enum': {\n                  name: 'VirtualNetworkGatewayConnectionStatus',\n                  modelAsString: true\n                }\n              },\n              ingressBytesTransferred: {\n                readOnly: true,\n                type: 'integer',\n                format: 'int64',\n                description: 'The Ingress Bytes Transferred in this connection.'\n              },\n              egressBytesTransferred: {\n                readOnly: true,\n                type: 'integer',\n                format: 'int64',\n                description: 'The Egress Bytes Transferred in this connection.'\n              },\n              lastConnectionEstablishedUtcTime: {\n                readOnly: true,\n                type: 'string',\n                description: 'The time at which connection was established in Utc format.'\n              }\n            },\n            description: 'VirtualNetworkGatewayConnection properties.'\n          },\n          description: \"Collection of all tunnels' connection health status.\"\n        },\n        egressBytesTransferred: {\n          readOnly: true,\n          type: 'integer',\n          format: 'int64',\n          description: 'The egress bytes transferred in this connection.'\n        },\n        ingressBytesTransferred: {\n          readOnly: true,\n          type: 'integer',\n          format: 'int64',\n          description: 'The ingress bytes transferred in this connection.'\n        },\n        peer: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        enableBgp: { type: 'boolean', description: 'EnableBgp flag.' },\n        useLocalAzureIpAddress: {\n          type: 'boolean',\n          description: 'Use private local Azure IP for the connection.'\n        },\n        usePolicyBasedTrafficSelectors: {\n          type: 'boolean',\n          description: 'Enable policy-based traffic selectors.'\n        },\n        ipsecPolicies: {\n          type: 'array',\n          items: {\n            properties: {\n              saLifeTimeSeconds: {\n                type: 'integer',\n                format: 'int32',\n                description: 'The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.'\n              },\n              saDataSizeKilobytes: {\n                type: 'integer',\n                format: 'int32',\n                description: 'The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.'\n              },\n              ipsecEncryption: {\n                description: 'The IPSec encryption algorithm (IKE phase 1).',\n                type: 'string',\n                enum: [\n                  'None',      'DES',\n                  'DES3',      'AES128',\n                  'AES192',    'AES256',\n                  'GCMAES128', 'GCMAES192',\n                  'GCMAES256'\n                ],\n                'x-ms-enum': { name: 'IpsecEncryption', modelAsString: true }\n              },\n              ipsecIntegrity: {\n                description: 'The IPSec integrity algorithm (IKE phase 1).',\n                type: 'string',\n                enum: [\n                  'MD5',\n                  'SHA1',\n                  'SHA256',\n                  'GCMAES128',\n                  'GCMAES192',\n                  'GCMAES256'\n                ],\n                'x-ms-enum': { name: 'IpsecIntegrity', modelAsString: true }\n              },\n              ikeEncryption: {\n                description: 'The IKE encryption algorithm (IKE phase 2).',\n                type: 'string',\n                enum: [\n                  'DES',\n                  'DES3',\n                  'AES128',\n                  'AES192',\n                  'AES256',\n                  'GCMAES256',\n                  'GCMAES128'\n                ],\n                'x-ms-enum': { name: 'IkeEncryption', modelAsString: true }\n              },\n              ikeIntegrity: {\n                description: 'The IKE integrity algorithm (IKE phase 2).',\n                type: 'string',\n                enum: [\n                  'MD5',\n                  'SHA1',\n                  'SHA256',\n                  'SHA384',\n                  'GCMAES256',\n                  'GCMAES128'\n                ],\n                'x-ms-enum': { name: 'IkeIntegrity', modelAsString: true }\n              },\n              dhGroup: {\n                description: 'The DH Group used in IKE Phase 1 for initial SA.',\n                type: 'string',\n                enum: [\n                  'None',\n                  'DHGroup1',\n                  'DHGroup2',\n                  'DHGroup14',\n                  'DHGroup2048',\n                  'ECP256',\n                  'ECP384',\n                  'DHGroup24'\n                ],\n                'x-ms-enum': { name: 'DhGroup', modelAsString: true }\n              },\n              pfsGroup: {\n                description: 'The Pfs Group used in IKE Phase 2 for new child SA.',\n                type: 'string',\n                enum: [\n                  'None',   'PFS1',\n                  'PFS2',   'PFS2048',\n                  'ECP256', 'ECP384',\n                  'PFS24',  'PFS14',\n                  'PFSMM'\n                ],\n                'x-ms-enum': { name: 'PfsGroup', modelAsString: true }\n              }\n            },\n            required: [\n              'saLifeTimeSeconds',\n              'saDataSizeKilobytes',\n              'ipsecEncryption',\n              'ipsecIntegrity',\n              'ikeEncryption',\n              'ikeIntegrity',\n              'dhGroup',\n              'pfsGroup'\n            ],\n            description: 'An IPSec Policy configuration for a virtual network gateway connection.'\n          },\n          description: 'The IPSec Policies to be considered by this connection.'\n        },\n        trafficSelectorPolicies: {\n          type: 'array',\n          items: {\n            properties: {\n              localAddressRanges: {\n                type: 'array',\n                items: { type: 'string' },\n                description: 'A collection of local address spaces in CIDR format.'\n              },\n              remoteAddressRanges: {\n                type: 'array',\n                items: { type: 'string' },\n                description: 'A collection of remote address spaces in CIDR format.'\n              }\n            },\n            required: [ 'localAddressRanges', 'remoteAddressRanges' ],\n            description: 'An traffic selector policy for a virtual network gateway connection.'\n          },\n          description: 'The Traffic Selector Policies to be considered by this connection.'\n        },\n        resourceGuid: {\n          readOnly: true,\n          type: 'string',\n          description: 'The resource GUID property of the virtual network gateway connection resource.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the virtual network gateway connection resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        expressRouteGatewayBypass: {\n          type: 'boolean',\n          description: 'Bypass ExpressRoute Gateway for data forwarding.'\n        }\n      },\n      required: [ 'virtualNetworkGateway1', 'connectionType' ]\n    },\n    etag: {\n      readOnly: true,\n      type: 'string',\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  required: [ 'properties' ],\n  description: 'A common class for general resource information.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/virtualNetworkGateway.json"},"here"),"."))}l.isMDXComponent=!0}}]);