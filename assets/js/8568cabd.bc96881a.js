"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8692],{3905:function(e,r,n){n.d(r,{Zo:function(){return p},kt:function(){return m}});var t=n(67294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,i=function(e,r){if(null==e)return{};var n,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=t.createContext({}),c=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=c(e.components);return t.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},l=t.forwardRef((function(e,r){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),l=c(n),m=i,g=l["".concat(u,".").concat(m)]||l[m]||d[m]||o;return n?t.createElement(g,s(s({ref:r},p),{},{components:n})):t.createElement(g,s({ref:r},p))}));function m(e,r){var n=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=l;var a={};for(var u in r)hasOwnProperty.call(r,u)&&(a[u]=r[u]);a.originalType=e,a.mdxType="string"==typeof e?e:i,s[1]=a;for(var c=2;c<o;c++)s[c]=n[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}l.displayName="MDXCreateElement"},73772:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return a},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return l}});var t=n(87462),i=n(63366),o=(n(67294),n(3905)),s=["components"],a={id:"ExpressRouteCircuit",title:"ExpressRouteCircuit"},u=void 0,c={unversionedId:"azure/resources/Network/ExpressRouteCircuit",id:"azure/resources/Network/ExpressRouteCircuit",isDocsHomePage:!1,title:"ExpressRouteCircuit",description:"Provides a ExpressRouteCircuit from the Network group",source:"@site/docs/azure/resources/Network/ExpressRouteCircuit.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/ExpressRouteCircuit",permalink:"/docs/azure/resources/Network/ExpressRouteCircuit",tags:[],version:"current",frontMatter:{id:"ExpressRouteCircuit",title:"ExpressRouteCircuit"},sidebar:"docs",previous:{title:"DscpConfiguration",permalink:"/docs/azure/resources/Network/DscpConfiguration"},next:{title:"ExpressRouteCircuitAuthorization",permalink:"/docs/azure/resources/Network/ExpressRouteCircuitAuthorization"}},p=[{value:"Examples",id:"examples",children:[{value:"Create ExpressRouteCircuit",id:"create-expressroutecircuit",children:[],level:3},{value:"Create ExpressRouteCircuit on ExpressRoutePort",id:"create-expressroutecircuit-on-expressrouteport",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:p};function l(e){var r=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},d,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"ExpressRouteCircuit")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"create-expressroutecircuit"},"Create ExpressRouteCircuit"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeExpressRouteCircuit({\n  name: "myExpressRouteCircuit",\n  properties: () => ({\n    sku: {\n      name: "Standard_MeteredData",\n      tier: "Standard",\n      family: "MeteredData",\n    },\n    properties: {\n      authorizations: [],\n      peerings: [],\n      allowClassicOperations: false,\n      serviceProviderProperties: {\n        serviceProviderName: "Equinix",\n        peeringLocation: "Silicon Valley",\n        bandwidthInMbps: 200,\n      },\n    },\n    location: "Brazil South",\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    routeFilter: resources.Network.RouteFilter["myRouteFilter"],\n    expressRouteConnection:\n      resources.Network.ExpressRouteConnection["myExpressRouteConnection"],\n    route: resources.Network.Route["myRoute"],\n  }),\n});\n\n')),(0,o.kt)("h3",{id:"create-expressroutecircuit-on-expressrouteport"},"Create ExpressRouteCircuit on ExpressRoutePort"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeExpressRouteCircuit({\n  name: "myExpressRouteCircuit",\n  properties: () => ({\n    location: "westus",\n    sku: {\n      name: "Premium_MeteredData",\n      tier: "Premium",\n      family: "MeteredData",\n    },\n    properties: {\n      expressRoutePort: {\n        id: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/expressRoutePorts/portName",\n      },\n      bandwidthInGbps: 10,\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    routeFilter: resources.Network.RouteFilter["myRouteFilter"],\n    expressRouteConnection:\n      resources.Network.ExpressRouteConnection["myExpressRouteConnection"],\n    route: resources.Network.Route["myRoute"],\n  }),\n});\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/RouteFilter"},"RouteFilter")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteConnection"},"ExpressRouteConnection")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Route"},"Route"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    sku: {\n      description: 'The SKU.',\n      properties: {\n        name: { type: 'string', description: 'The name of the SKU.' },\n        tier: {\n          type: 'string',\n          description: 'The tier of the SKU.',\n          enum: [ 'Standard', 'Premium', 'Basic', 'Local' ],\n          'x-ms-enum': { name: 'ExpressRouteCircuitSkuTier', modelAsString: true }\n        },\n        family: {\n          type: 'string',\n          description: 'The family of the SKU.',\n          enum: [ 'UnlimitedData', 'MeteredData' ],\n          'x-ms-enum': { name: 'ExpressRouteCircuitSkuFamily', modelAsString: true }\n        }\n      }\n    },\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the express route circuit.',\n      properties: {\n        allowClassicOperations: { type: 'boolean', description: 'Allow classic operations.' },\n        circuitProvisioningState: {\n          type: 'string',\n          description: 'The CircuitProvisioningState state of the resource.'\n        },\n        serviceProviderProvisioningState: {\n          description: 'The ServiceProviderProvisioningState state of the resource.',\n          type: 'string',\n          enum: [\n            'NotProvisioned',\n            'Provisioning',\n            'Provisioned',\n            'Deprovisioning'\n          ],\n          'x-ms-enum': {\n            name: 'ServiceProviderProvisioningState',\n            modelAsString: true\n          }\n        },\n        authorizations: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route circuit authorization.',\n                properties: {\n                  authorizationKey: {\n                    type: 'string',\n                    description: 'The authorization key.'\n                  },\n                  authorizationUseStatus: {\n                    type: 'string',\n                    description: 'The authorization use status.',\n                    enum: [ 'Available', 'InUse' ],\n                    'x-ms-enum': {\n                      name: 'AuthorizationUseStatus',\n                      modelAsString: true\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the authorization resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Authorization in an ExpressRouteCircuit resource.'\n          },\n          description: 'The list of authorizations.'\n        },\n        peerings: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route circuit peering.',\n                properties: {\n                  peeringType: {\n                    description: 'The peering type.',\n                    type: 'string',\n                    enum: [\n                      'AzurePublicPeering',\n                      'AzurePrivatePeering',\n                      'MicrosoftPeering'\n                    ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringType',\n                      modelAsString: true\n                    }\n                  },\n                  state: {\n                    description: 'The peering state.',\n                    type: 'string',\n                    enum: [ 'Disabled', 'Enabled' ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringState',\n                      modelAsString: true\n                    }\n                  },\n                  azureASN: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The Azure ASN.'\n                  },\n                  peerASN: {\n                    type: 'integer',\n                    format: 'int64',\n                    minimum: 1,\n                    maximum: 4294967295,\n                    description: 'The peer ASN.'\n                  },\n                  primaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The primary address prefix.'\n                  },\n                  secondaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The secondary address prefix.'\n                  },\n                  primaryAzurePort: { type: 'string', description: 'The primary port.' },\n                  secondaryAzurePort: {\n                    type: 'string',\n                    description: 'The secondary port.'\n                  },\n                  sharedKey: { type: 'string', description: 'The shared key.' },\n                  vlanId: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The VLAN ID.'\n                  },\n                  microsoftPeeringConfig: {\n                    description: 'The Microsoft peering configuration.',\n                    properties: {\n                      advertisedPublicPrefixes: [Object],\n                      advertisedCommunities: [Object],\n                      advertisedPublicPrefixesState: [Object],\n                      legacyMode: [Object],\n                      customerASN: [Object],\n                      routingRegistryName: [Object]\n                    }\n                  },\n                  stats: {\n                    description: 'The peering stats of express route circuit.',\n                    properties: {\n                      primarybytesIn: [Object],\n                      primarybytesOut: [Object],\n                      secondarybytesIn: [Object],\n                      secondarybytesOut: [Object]\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the express route circuit peering resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  gatewayManagerEtag: {\n                    type: 'string',\n                    description: 'The GatewayManager Etag.'\n                  },\n                  lastModifiedBy: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Who was the last to modify the peering.'\n                  },\n                  routeFilter: {\n                    properties: { id: [Object] },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  ipv6PeeringConfig: {\n                    description: 'The IPv6 peering configuration.',\n                    properties: {\n                      primaryPeerAddressPrefix: [Object],\n                      secondaryPeerAddressPrefix: [Object],\n                      microsoftPeeringConfig: [Object],\n                      routeFilter: [Object],\n                      state: [Object]\n                    }\n                  },\n                  expressRouteConnection: {\n                    description: 'The ExpressRoute connection.',\n                    properties: { id: [Object] }\n                  },\n                  connections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    description: 'The list of circuit connections associated with Azure Private Peering for this circuit.'\n                  },\n                  peeredConnections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    readOnly: true,\n                    description: 'The list of peered circuit connections associated with Azure Private Peering for this circuit.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Peering in an ExpressRouteCircuit resource.'\n          },\n          description: 'The list of peerings.'\n        },\n        serviceKey: { type: 'string', description: 'The ServiceKey.' },\n        serviceProviderNotes: { type: 'string', description: 'The ServiceProviderNotes.' },\n        serviceProviderProperties: {\n          description: 'The ServiceProviderProperties.',\n          properties: {\n            serviceProviderName: { type: 'string', description: 'The serviceProviderName.' },\n            peeringLocation: { type: 'string', description: 'The peering location.' },\n            bandwidthInMbps: {\n              type: 'integer',\n              format: 'int32',\n              description: 'The BandwidthInMbps.'\n            }\n          }\n        },\n        expressRoutePort: {\n          properties: { id: { type: 'string', description: 'Resource ID.' } },\n          description: 'Reference to another subresource.',\n          'x-ms-azure-resource': true\n        },\n        bandwidthInGbps: {\n          type: 'number',\n          description: 'The bandwidth of the circuit when the circuit is provisioned on an ExpressRoutePort resource.'\n        },\n        stag: {\n          readOnly: true,\n          type: 'integer',\n          format: 'int32',\n          description: 'The identifier of the circuit traffic. Outer tag for QinQ encapsulation.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the express route circuit resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        },\n        gatewayManagerEtag: { type: 'string', description: 'The GatewayManager Etag.' },\n        globalReachEnabled: {\n          type: 'boolean',\n          description: 'Flag denoting global reach status.'\n        }\n      }\n    },\n    etag: {\n      readOnly: true,\n      type: 'string',\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'ExpressRouteCircuit resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/expressRouteCircuit.json"},"here"),"."))}l.isMDXComponent=!0}}]);