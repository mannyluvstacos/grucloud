(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{237:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),p=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(t),f=r,m=s["".concat(c,".").concat(f)]||s[f]||d[f]||a;return t?o.a.createElement(m,i(i({ref:n},u),{},{components:t})):o.a.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,c=new Array(a);c[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var u=2;u<a;u++)c[u]=t[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},75:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return u}));var r=t(3),o=(t(0),t(237));const a={id:"GenCode",title:"Generate Code"},c={unversionedId:"cli/GenCode",id:"cli/GenCode",isDocsHomePage:!1,title:"Generate Code",description:"The gencode commands generates the code from the live infrastructure.",source:"@site/docs/cli/GenCode.md",sourceDirName:"cli",slug:"/cli/GenCode",permalink:"/docs/cli/GenCode",version:"current",frontMatter:{id:"GenCode",title:"Generate Code"}},i=[{value:"Command Options",id:"command-options",children:[]}],l={toc:i};function u({components:e,...n}){return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"gencode")," commands generates the code from the live infrastructure."),Object(o.b)("h2",{id:"command-options"},"Command Options"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"gc help gencode\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-txt"},'Usage: gc gencode|c [options]\n\nGenerate infrastruture code from deployed resources\n\nOptions:\n  --inventory <file>       resources inventory (default:\n                           "artifacts/inventory.json")\n  --no-inventory-fetch     do not fetch the inventory\n  --no-download            do not download assets\n  -o, --outputCode <file>  resources.js output (default: "resources.js")\n  --outputEnv <file>       default.env environment variables (default:\n                           "artifacts/default.env")\n  -m, --mapping <file>     mapping file (default: "mapping.json")\n  --no-prompt              no prompt for saving\n  -p, --provider <value>   Filter by provider, multiple values allowed\n  -h, --help               display help for command\n')))}u.isMDXComponent=!0}}]);