(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{160:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return c})),t.d(r,"metadata",(function(){return l})),t.d(r,"toc",(function(){return s})),t.d(r,"default",(function(){return p}));var n=t(3),a=t(8),o=(t(0),t(244)),c={id:"TargetGroup",title:"Target Group"},l={unversionedId:"aws/resources/ELBv2/TargetGroup",id:"aws/resources/ELBv2/TargetGroup",isDocsHomePage:!1,title:"Target Group",description:"Manages an ELB Target Group.",source:"@site/docs/aws/resources/ELBv2/TargetGroup.md",sourceDirName:"aws/resources/ELBv2",slug:"/aws/resources/ELBv2/TargetGroup",permalink:"/docs/aws/resources/ELBv2/TargetGroup",version:"current",frontMatter:{id:"TargetGroup",title:"Target Group"},sidebar:"docs",previous:{title:"Rule",permalink:"/docs/aws/resources/ELBv2/Rule"},next:{title:"Group",permalink:"/docs/aws/resources/IAM/Group"}},s=[{value:"Example",id:"example",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Source Code",id:"source-code",children:[]},{value:"Dependencies",id:"dependencies",children:[]},{value:"Used By",id:"used-by",children:[]},{value:"List",id:"list",children:[]}],u={toc:s};function p(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,t,{components:r,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Manages an ",Object(o.b)("a",{parentName:"p",href:"https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html"},"ELB Target Group"),"."),Object(o.b)("p",null,"A target group can be attached directly to an AutoScaling Group or an AutoScaling Group created by an EKS Node Group."),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},'provider.ELBv2.makeTargetGroup({\n  name: "target-group-rest",\n  properties: ({ config }) => ({\n    Protocol: "HTTP",\n    Port: 30020,\n    HealthCheckProtocol: "HTTP",\n    HealthCheckPort: "traffic-port",\n    HealthCheckEnabled: true,\n    HealthCheckIntervalSeconds: 30,\n    HealthCheckTimeoutSeconds: 5,\n    HealthyThresholdCount: 5,\n    HealthCheckPath: "/",\n    Matcher: {\n      HttpCode: "200",\n    },\n    TargetType: "instance",\n    ProtocolVersion: "HTTP1",\n  }),\n  dependencies: ({ resources }) => ({\n    vpc: resources.EC2.Vpc["vpc"],\n  }),\n});\n')),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("p",null,"The list of properties are the parameter of ",Object(o.b)("a",{parentName:"p",href:"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/ELBv2.html#createTargetGroup-property"},"createTargetGroup")),Object(o.b)("h2",{id:"source-code"},"Source Code"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://github.com/grucloud/grucloud/blob/main/examples/aws/ELBv2/load-balancer/resources.js"},"Load Balancer"))),Object(o.b)("h2",{id:"dependencies"},"Dependencies"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/aws/resources/EC2/Vpc"},"VPC")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/aws/resources/EKS/NodeGroup"},"EKS NodeGroup"))),Object(o.b)("h2",{id:"used-by"},"Used By"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/docs/aws/resources/AutoScaling/AutoScalingGroup"},"AutoScalingGroup"))),Object(o.b)("h2",{id:"list"},"List"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-sh"},"gc l -t TargetGroup\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-txt"},'Listing resources on 1 provider: aws\n\u2713 aws\n  \u2713 Initialising\n  \u2713 Listing 2/2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2 ELBv2::TargetGroup from aws                                               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: target-group-rest                                                     \u2502\n\u2502 managedByUs: Yes                                                            \u2502\n\u2502 live:                                                                       \u2502\n\u2502   TargetGroupArn: arn:aws:elasticloadbalancing:us-east-1:840541460064:targ\u2026 \u2502\n\u2502   TargetGroupName: target-group-rest                                        \u2502\n\u2502   Protocol: HTTP                                                            \u2502\n\u2502   Port: 30020                                                               \u2502\n\u2502   VpcId: vpc-055bc1b8bdcbd18ac                                              \u2502\n\u2502   HealthCheckProtocol: HTTP                                                 \u2502\n\u2502   HealthCheckPort: traffic-port                                             \u2502\n\u2502   HealthCheckEnabled: true                                                  \u2502\n\u2502   HealthCheckIntervalSeconds: 30                                            \u2502\n\u2502   HealthCheckTimeoutSeconds: 5                                              \u2502\n\u2502   HealthyThresholdCount: 5                                                  \u2502\n\u2502   UnhealthyThresholdCount: 2                                                \u2502\n\u2502   HealthCheckPath: /                                                        \u2502\n\u2502   Matcher:                                                                  \u2502\n\u2502     HttpCode: 200                                                           \u2502\n\u2502   LoadBalancerArns:                                                         \u2502\n\u2502     - "arn:aws:elasticloadbalancing:us-east-1:840541460064:loadbalancer/ap\u2026 \u2502\n\u2502   TargetType: instance                                                      \u2502\n\u2502   ProtocolVersion: HTTP1                                                    \u2502\n\u2502   Tags:                                                                     \u2502\n\u2502     - Key: gc-created-by-provider                                           \u2502\n\u2502       Value: aws                                                            \u2502\n\u2502     - Key: gc-managed-by                                                    \u2502\n\u2502       Value: grucloud                                                       \u2502\n\u2502     - Key: gc-project-name                                                  \u2502\n\u2502       Value: @grucloud/example-aws-elbv2-loadbalancer                       \u2502\n\u2502     - Key: gc-stage                                                         \u2502\n\u2502       Value: dev                                                            \u2502\n\u2502     - Key: Name                                                             \u2502\n\u2502       Value: target-group-rest                                              \u2502\n\u2502                                                                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 name: target-group-web                                                      \u2502\n\u2502 managedByUs: Yes                                                            \u2502\n\u2502 live:                                                                       \u2502\n\u2502   TargetGroupArn: arn:aws:elasticloadbalancing:us-east-1:840541460064:targ\u2026 \u2502\n\u2502   TargetGroupName: target-group-web                                         \u2502\n\u2502   Protocol: HTTP                                                            \u2502\n\u2502   Port: 30010                                                               \u2502\n\u2502   VpcId: vpc-055bc1b8bdcbd18ac                                              \u2502\n\u2502   HealthCheckProtocol: HTTP                                                 \u2502\n\u2502   HealthCheckPort: traffic-port                                             \u2502\n\u2502   HealthCheckEnabled: true                                                  \u2502\n\u2502   HealthCheckIntervalSeconds: 30                                            \u2502\n\u2502   HealthCheckTimeoutSeconds: 5                                              \u2502\n\u2502   HealthyThresholdCount: 5                                                  \u2502\n\u2502   UnhealthyThresholdCount: 2                                                \u2502\n\u2502   HealthCheckPath: /                                                        \u2502\n\u2502   Matcher:                                                                  \u2502\n\u2502     HttpCode: 200                                                           \u2502\n\u2502   LoadBalancerArns:                                                         \u2502\n\u2502     - "arn:aws:elasticloadbalancing:us-east-1:840541460064:loadbalancer/ap\u2026 \u2502\n\u2502   TargetType: instance                                                      \u2502\n\u2502   ProtocolVersion: HTTP1                                                    \u2502\n\u2502   Tags:                                                                     \u2502\n\u2502     - Key: gc-created-by-provider                                           \u2502\n\u2502       Value: aws                                                            \u2502\n\u2502     - Key: gc-managed-by                                                    \u2502\n\u2502       Value: grucloud                                                       \u2502\n\u2502     - Key: gc-project-name                                                  \u2502\n\u2502       Value: @grucloud/example-aws-elbv2-loadbalancer                       \u2502\n\u2502     - Key: gc-stage                                                         \u2502\n\u2502       Value: dev                                                            \u2502\n\u2502     - Key: Name                                                             \u2502\n\u2502       Value: target-group-web                                               \u2502\n\u2502                                                                             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\nList Summary:\nProvider: aws\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 aws                                                                        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 ELBv2::TargetGroup \u2502 target-group-rest                                     \u2502\n\u2502                    \u2502 target-group-web                                      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n2 resources, 1 type, 1 provider\nCommand "gc l -t TargetGroup" executed in 4s\n')))}p.isMDXComponent=!0},244:function(e,r,t){"use strict";t.d(r,"a",(function(){return i})),t.d(r,"b",(function(){return g}));var n=t(0),a=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function c(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?c(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),p=function(e){var r=a.a.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},i=function(e){var r=p(e.components);return a.a.createElement(u.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},b=a.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),i=p(t),b=n,g=i["".concat(c,".").concat(b)]||i[b]||d[b]||o;return t?a.a.createElement(g,l(l({ref:r},u),{},{components:t})):a.a.createElement(g,l({ref:r},u))}));function g(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,c=new Array(o);c[0]=b;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var u=2;u<o;u++)c[u]=t[u];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);