"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2564],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},l=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),l=u(t),d=o,h=l["".concat(c,".").concat(d)]||l[d]||g[d]||s;return t?n.createElement(h,i(i({ref:r},p),{},{components:t})):n.createElement(h,i({ref:r},p))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var s=t.length,i=new Array(s);i[0]=l;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}l.displayName="MDXCreateElement"},66144:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return l}});var n=t(87462),o=t(63366),s=(t(67294),t(3905)),i=["components"],a={id:"StorageInsightConfig",title:"StorageInsightConfig"},c=void 0,u={unversionedId:"azure/resources/OperationalInsights/StorageInsightConfig",id:"azure/resources/OperationalInsights/StorageInsightConfig",isDocsHomePage:!1,title:"StorageInsightConfig",description:"Provides a StorageInsightConfig from the OperationalInsights group",source:"@site/docs/azure/resources/OperationalInsights/StorageInsightConfig.md",sourceDirName:"azure/resources/OperationalInsights",slug:"/azure/resources/OperationalInsights/StorageInsightConfig",permalink:"/docs/azure/resources/OperationalInsights/StorageInsightConfig",tags:[],version:"current",frontMatter:{id:"StorageInsightConfig",title:"StorageInsightConfig"},sidebar:"docs",previous:{title:"StorageInsight",permalink:"/docs/azure/resources/OperationalInsights/StorageInsight"},next:{title:"Workspace",permalink:"/docs/azure/resources/OperationalInsights/Workspace"}},p=[{value:"Examples",id:"examples",children:[{value:"StorageInsightsCreate",id:"storageinsightscreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],g={toc:p};function l(e){var r=e.components,t=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},g,t,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Provides a ",(0,s.kt)("strong",{parentName:"p"},"StorageInsightConfig")," from the ",(0,s.kt)("strong",{parentName:"p"},"OperationalInsights")," group"),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"storageinsightscreate"},"StorageInsightsCreate"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'provider.OperationalInsights.makeStorageInsightConfig({\n  name: "myStorageInsightConfig",\n  properties: () => ({\n    properties: {\n      containers: ["wad-iis-logfiles"],\n      tables: ["WADWindowsEventLogsTable", "LinuxSyslogVer2v0"],\n      storageAccount: {\n        id: "/subscriptions/00000000-0000-0000-0000-000000000005/resourcegroups/OIAutoRest6987/providers/microsoft.storage/storageaccounts/AzTestFakeSA9945",\n        key: "1234",\n      },\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    linkedStorageAccount:\n      resources.OperationalInsights.LinkedStorageAccount[\n        "myLinkedStorageAccount"\n      ],\n    workspace: resources.OperationalInsights.Workspace["myWorkspace"],\n  }),\n});\n\n')),(0,s.kt)("h2",{id:"dependencies"},"Dependencies"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"../OperationalInsights/LinkedStorageAccount.md"},"LinkedStorageAccount")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/azure/resources/OperationalInsights/Workspace"},"Workspace"))),(0,s.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"{\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Storage insight properties.',\n      properties: {\n        containers: {\n          type: 'array',\n          items: { type: 'string' },\n          description: 'The names of the blob containers that the workspace should read'\n        },\n        tables: {\n          type: 'array',\n          items: { type: 'string' },\n          description: 'The names of the Azure tables that the workspace should read'\n        },\n        storageAccount: {\n          description: 'The storage account connection details',\n          properties: {\n            id: {\n              type: 'string',\n              description: 'The Azure Resource Manager ID of the storage account resource.'\n            },\n            key: { type: 'string', description: 'The storage account key.' }\n          },\n          required: [ 'id', 'key' ]\n        },\n        status: {\n          description: 'The status of the storage insight',\n          readOnly: true,\n          properties: {\n            state: {\n              type: 'string',\n              description: 'The state of the storage insight connection to the workspace',\n              enum: [ 'OK', 'ERROR' ],\n              'x-ms-enum': { name: 'StorageInsightState', modelAsString: true }\n            },\n            description: {\n              type: 'string',\n              description: 'Description of the state of the storage insight.'\n            }\n          },\n          required: [ 'state' ]\n        }\n      },\n      required: [ 'storageAccount' ]\n    },\n    eTag: { type: 'string', description: 'The ETag of the storage insight.' },\n    tags: {\n      type: 'object',\n      additionalProperties: { type: 'string' },\n      'x-ms-mutability': [ 'read', 'create', 'update' ],\n      description: 'Resource tags.'\n    }\n  },\n  allOf: [\n    {\n      title: 'Proxy Resource',\n      description: 'The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location',\n      type: 'object',\n      allOf: [\n        {\n          title: 'Resource',\n          description: 'Common fields that are returned in the response for all Azure Resource Manager resources',\n          type: 'object',\n          properties: {\n            id: {\n              readOnly: true,\n              type: 'string',\n              description: 'Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}'\n            },\n            name: {\n              readOnly: true,\n              type: 'string',\n              description: 'The name of the resource'\n            },\n            type: {\n              readOnly: true,\n              type: 'string',\n              description: 'The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"'\n            }\n          },\n          'x-ms-azure-resource': true\n        }\n      ]\n    }\n  ],\n  description: 'The top level storage insight resource container.'\n}\n")),(0,s.kt)("h2",{id:"misc"},"Misc"),(0,s.kt)("p",null,"The resource version is ",(0,s.kt)("inlineCode",{parentName:"p"},"2020-08-01"),"."),(0,s.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/operationalinsights/resource-manager/Microsoft.OperationalInsights/stable/2020-08-01/StorageInsightConfigs.json"},"here"),"."))}l.isMDXComponent=!0}}]);