"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7549],{3905:function(e,n,r){r.d(n,{Zo:function(){return p},kt:function(){return g}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),a=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},p=function(e){var n=a(e.components);return t.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=a(r),g=i,m=l["".concat(u,".").concat(g)]||l[g]||d[g]||o;return r?t.createElement(m,s(s({ref:n},p),{},{components:r})):t.createElement(m,s({ref:n},p))}));function g(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,s=new Array(o);s[0]=l;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,s[1]=c;for(var a=2;a<o;a++)s[a]=r[a];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},56109:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return a},toc:function(){return p},default:function(){return l}});var t=r(87462),i=r(63366),o=(r(67294),r(3905)),s=["components"],c={id:"RouteFilter",title:"RouteFilter"},u=void 0,a={unversionedId:"azure/resources/Network/RouteFilter",id:"azure/resources/Network/RouteFilter",isDocsHomePage:!1,title:"RouteFilter",description:"Provides a RouteFilter from the Network group",source:"@site/docs/azure/resources/Network/RouteFilter.md",sourceDirName:"azure/resources/Network",slug:"/azure/resources/Network/RouteFilter",permalink:"/docs/azure/resources/Network/RouteFilter",tags:[],version:"current",frontMatter:{id:"RouteFilter",title:"RouteFilter"},sidebar:"docs",previous:{title:"Route",permalink:"/docs/azure/resources/Network/Route"},next:{title:"RouteFilterRule",permalink:"/docs/azure/resources/Network/RouteFilterRule"}},p=[{value:"Examples",id:"examples",children:[{value:"RouteFilterCreate",id:"routefiltercreate",children:[],level:3}],level:2},{value:"Dependencies",id:"dependencies",children:[],level:2},{value:"Swagger Schema",id:"swagger-schema",children:[],level:2},{value:"Misc",id:"misc",children:[],level:2}],d={toc:p};function l(e){var n=e.components,r=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Provides a ",(0,o.kt)("strong",{parentName:"p"},"RouteFilter")," from the ",(0,o.kt)("strong",{parentName:"p"},"Network")," group"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"routefiltercreate"},"RouteFilterCreate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'provider.Network.makeRouteFilter({\n  name: "myRouteFilter",\n  properties: () => ({\n    location: "West US",\n    tags: { key1: "value1" },\n    properties: {\n      rules: [\n        {\n          name: "ruleName",\n          properties: {\n            access: "Allow",\n            routeFilterRuleType: "Community",\n            communities: ["12076:5030", "12076:5040"],\n          },\n        },\n      ],\n    },\n  }),\n  dependencies: ({ resources }) => ({\n    resourceGroup: resources.Resources.ResourceGroup["myResourceGroup"],\n    route: resources.Network.Route["myRoute"],\n    expressRouteConnection:\n      resources.Network.ExpressRouteConnection["myExpressRouteConnection"],\n  }),\n});\n\n')),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Resources/ResourceGroup"},"ResourceGroup")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/Route"},"Route")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/azure/resources/Network/ExpressRouteConnection"},"ExpressRouteConnection"))),(0,o.kt)("h2",{id:"swagger-schema"},"Swagger Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"{\n  required: [ 'location' ],\n  properties: {\n    properties: {\n      'x-ms-client-flatten': true,\n      description: 'Properties of the route filter.',\n      properties: {\n        rules: {\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the route filter rule.',\n                required: [ 'access', 'routeFilterRuleType', 'communities' ],\n                properties: {\n                  access: {\n                    description: 'The access type of the rule.',\n                    type: 'string',\n                    enum: [ 'Allow', 'Deny' ],\n                    'x-ms-enum': { name: 'Access', modelAsString: true }\n                  },\n                  routeFilterRuleType: {\n                    type: 'string',\n                    description: 'The rule type of the rule.',\n                    enum: [ 'Community' ],\n                    'x-ms-enum': {\n                      name: 'RouteFilterRuleType',\n                      modelAsString: true\n                    }\n                  },\n                  communities: {\n                    type: 'array',\n                    items: { type: 'string' },\n                    description: \"The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].\"\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the route filter rule resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              location: { type: 'string', description: 'Resource location.' },\n              etag: {\n                type: 'string',\n                readOnly: true,\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Route Filter Rule Resource.'\n          },\n          description: 'Collection of RouteFilterRules contained within a route filter.'\n        },\n        peerings: {\n          readOnly: true,\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route circuit peering.',\n                properties: {\n                  peeringType: {\n                    description: 'The peering type.',\n                    type: 'string',\n                    enum: [\n                      'AzurePublicPeering',\n                      'AzurePrivatePeering',\n                      'MicrosoftPeering'\n                    ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringType',\n                      modelAsString: true\n                    }\n                  },\n                  state: {\n                    description: 'The peering state.',\n                    type: 'string',\n                    enum: [ 'Disabled', 'Enabled' ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringState',\n                      modelAsString: true\n                    }\n                  },\n                  azureASN: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The Azure ASN.'\n                  },\n                  peerASN: {\n                    type: 'integer',\n                    format: 'int64',\n                    minimum: 1,\n                    maximum: 4294967295,\n                    description: 'The peer ASN.'\n                  },\n                  primaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The primary address prefix.'\n                  },\n                  secondaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The secondary address prefix.'\n                  },\n                  primaryAzurePort: { type: 'string', description: 'The primary port.' },\n                  secondaryAzurePort: {\n                    type: 'string',\n                    description: 'The secondary port.'\n                  },\n                  sharedKey: { type: 'string', description: 'The shared key.' },\n                  vlanId: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The VLAN ID.'\n                  },\n                  microsoftPeeringConfig: {\n                    description: 'The Microsoft peering configuration.',\n                    properties: {\n                      advertisedPublicPrefixes: [Object],\n                      advertisedCommunities: [Object],\n                      advertisedPublicPrefixesState: [Object],\n                      legacyMode: [Object],\n                      customerASN: [Object],\n                      routingRegistryName: [Object]\n                    }\n                  },\n                  stats: {\n                    description: 'The peering stats of express route circuit.',\n                    properties: {\n                      primarybytesIn: [Object],\n                      primarybytesOut: [Object],\n                      secondarybytesIn: [Object],\n                      secondarybytesOut: [Object]\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the express route circuit peering resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  gatewayManagerEtag: {\n                    type: 'string',\n                    description: 'The GatewayManager Etag.'\n                  },\n                  lastModifiedBy: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Who was the last to modify the peering.'\n                  },\n                  routeFilter: {\n                    properties: { id: [Object] },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  ipv6PeeringConfig: {\n                    description: 'The IPv6 peering configuration.',\n                    properties: {\n                      primaryPeerAddressPrefix: [Object],\n                      secondaryPeerAddressPrefix: [Object],\n                      microsoftPeeringConfig: [Object],\n                      routeFilter: [Object],\n                      state: [Object]\n                    }\n                  },\n                  expressRouteConnection: {\n                    description: 'The ExpressRoute connection.',\n                    properties: { id: [Object] }\n                  },\n                  connections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    description: 'The list of circuit connections associated with Azure Private Peering for this circuit.'\n                  },\n                  peeredConnections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    readOnly: true,\n                    description: 'The list of peered circuit connections associated with Azure Private Peering for this circuit.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Peering in an ExpressRouteCircuit resource.'\n          },\n          description: 'A collection of references to express route circuit peerings.'\n        },\n        ipv6Peerings: {\n          readOnly: true,\n          type: 'array',\n          items: {\n            properties: {\n              properties: {\n                'x-ms-client-flatten': true,\n                description: 'Properties of the express route circuit peering.',\n                properties: {\n                  peeringType: {\n                    description: 'The peering type.',\n                    type: 'string',\n                    enum: [\n                      'AzurePublicPeering',\n                      'AzurePrivatePeering',\n                      'MicrosoftPeering'\n                    ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringType',\n                      modelAsString: true\n                    }\n                  },\n                  state: {\n                    description: 'The peering state.',\n                    type: 'string',\n                    enum: [ 'Disabled', 'Enabled' ],\n                    'x-ms-enum': {\n                      name: 'ExpressRoutePeeringState',\n                      modelAsString: true\n                    }\n                  },\n                  azureASN: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The Azure ASN.'\n                  },\n                  peerASN: {\n                    type: 'integer',\n                    format: 'int64',\n                    minimum: 1,\n                    maximum: 4294967295,\n                    description: 'The peer ASN.'\n                  },\n                  primaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The primary address prefix.'\n                  },\n                  secondaryPeerAddressPrefix: {\n                    type: 'string',\n                    description: 'The secondary address prefix.'\n                  },\n                  primaryAzurePort: { type: 'string', description: 'The primary port.' },\n                  secondaryAzurePort: {\n                    type: 'string',\n                    description: 'The secondary port.'\n                  },\n                  sharedKey: { type: 'string', description: 'The shared key.' },\n                  vlanId: {\n                    type: 'integer',\n                    format: 'int32',\n                    description: 'The VLAN ID.'\n                  },\n                  microsoftPeeringConfig: {\n                    description: 'The Microsoft peering configuration.',\n                    properties: {\n                      advertisedPublicPrefixes: [Object],\n                      advertisedCommunities: [Object],\n                      advertisedPublicPrefixesState: [Object],\n                      legacyMode: [Object],\n                      customerASN: [Object],\n                      routingRegistryName: [Object]\n                    }\n                  },\n                  stats: {\n                    description: 'The peering stats of express route circuit.',\n                    properties: {\n                      primarybytesIn: [Object],\n                      primarybytesOut: [Object],\n                      secondarybytesIn: [Object],\n                      secondarybytesOut: [Object]\n                    }\n                  },\n                  provisioningState: {\n                    readOnly: true,\n                    description: 'The provisioning state of the express route circuit peering resource.',\n                    type: 'string',\n                    enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n                    'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n                  },\n                  gatewayManagerEtag: {\n                    type: 'string',\n                    description: 'The GatewayManager Etag.'\n                  },\n                  lastModifiedBy: {\n                    readOnly: true,\n                    type: 'string',\n                    description: 'Who was the last to modify the peering.'\n                  },\n                  routeFilter: {\n                    properties: { id: [Object] },\n                    description: 'Reference to another subresource.',\n                    'x-ms-azure-resource': true\n                  },\n                  ipv6PeeringConfig: {\n                    description: 'The IPv6 peering configuration.',\n                    properties: {\n                      primaryPeerAddressPrefix: [Object],\n                      secondaryPeerAddressPrefix: [Object],\n                      microsoftPeeringConfig: [Object],\n                      routeFilter: [Object],\n                      state: [Object]\n                    }\n                  },\n                  expressRouteConnection: {\n                    description: 'The ExpressRoute connection.',\n                    properties: { id: [Object] }\n                  },\n                  connections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    description: 'The list of circuit connections associated with Azure Private Peering for this circuit.'\n                  },\n                  peeredConnections: {\n                    type: 'array',\n                    items: {\n                      properties: [Object],\n                      allOf: [Array],\n                      description: 'Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.'\n                    },\n                    readOnly: true,\n                    description: 'The list of peered circuit connections associated with Azure Private Peering for this circuit.'\n                  }\n                }\n              },\n              name: {\n                type: 'string',\n                description: 'The name of the resource that is unique within a resource group. This name can be used to access the resource.'\n              },\n              etag: {\n                readOnly: true,\n                type: 'string',\n                description: 'A unique read-only string that changes whenever the resource is updated.'\n              },\n              type: {\n                readOnly: true,\n                type: 'string',\n                description: 'Type of the resource.'\n              }\n            },\n            allOf: [\n              {\n                properties: { id: { type: 'string', description: 'Resource ID.' } },\n                description: 'Reference to another subresource.',\n                'x-ms-azure-resource': true\n              }\n            ],\n            description: 'Peering in an ExpressRouteCircuit resource.'\n          },\n          description: 'A collection of references to express route circuit ipv6 peerings.'\n        },\n        provisioningState: {\n          readOnly: true,\n          description: 'The provisioning state of the route filter resource.',\n          type: 'string',\n          enum: [ 'Succeeded', 'Updating', 'Deleting', 'Failed' ],\n          'x-ms-enum': { name: 'ProvisioningState', modelAsString: true }\n        }\n      }\n    },\n    etag: {\n      type: 'string',\n      readOnly: true,\n      description: 'A unique read-only string that changes whenever the resource is updated.'\n    }\n  },\n  allOf: [\n    {\n      properties: {\n        id: { type: 'string', description: 'Resource ID.' },\n        name: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource name.'\n        },\n        type: {\n          readOnly: true,\n          type: 'string',\n          description: 'Resource type.'\n        },\n        location: { type: 'string', description: 'Resource location.' },\n        tags: {\n          type: 'object',\n          additionalProperties: { type: 'string' },\n          description: 'Resource tags.'\n        }\n      },\n      description: 'Common resource representation.',\n      'x-ms-azure-resource': true\n    }\n  ],\n  description: 'Route Filter Resource.'\n}\n")),(0,o.kt)("h2",{id:"misc"},"Misc"),(0,o.kt)("p",null,"The resource version is ",(0,o.kt)("inlineCode",{parentName:"p"},"2021-05-01"),"."),(0,o.kt)("p",null,"The Swagger schema used to generate this documentation can be found ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Azure/azure-rest-api-specs/tree/main/specification/network/resource-manager/Microsoft.Network/stable/2021-05-01/routeFilter.json"},"here"),"."))}l.isMDXComponent=!0}}]);